{% macro largeTitle(label, icon = '', first = false) %}
   {% set margins = 'mt-3' %}
   {% if first %}
      {% set margins = 'mt-n2' %}
   {% endif %}

   <div class="card border-0 shadow-none p-0 m-0 {{ margins }}">
      <div class="card-header mb-3">
         <h4 class="card-title {{ icon|length ? 'ms-4' : '' }}">
            {% if icon|length %}
               <div class="ribbon ribbon-bookmark ribbon-top ribbon-start bg-blue s-1">
                  <i class="fa-2x {{ icon }}"></i>
               </div>
            {% endif %}
            {{ label }}
         </h4>
      </div>
   </div>
{% endmacro %}


{% macro autoNameField(name, item, label = '', withtemplate, options = {}) %}
   {% set tpl_value = option.value|length > 0 ? option.value : item.fields[name] %}
   {% set tplmark = '' %}
   {% if item.isTemplate() %} {# TODO exluded types #}
      {% set tplmark = getAutofillMark(item, name, {'withtemplate': withtemplate}, tpl_value) %}
   {% endif %}
   {% set value = autoName(item.fields[name], name, (withtemplate == 2), item.getType(), item.fields['entities_id']) %}
   {% set label = __('%1$s%2$s')|format(label, tplmark) %}

   {{ _self.textField(name, value, label, options) }}
{% endmacro %}


{% macro textField(name, value, label = '', options = {}) %}
   {% set options = {'type': 'text'}|merge(options) %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'required': true}|merge(options) %}
   {% endif %}

   {% set field %}
      <input type="{{ options.type }}" id="%id%"
             class="form-control"
             name="{{ name }}" value="{{ value }}"
             {{ options.readonly ? 'readonly' : '' }}
             {{ options.disabled ? 'disabled' : '' }}
             {{ options.required ? 'required' : '' }} />
   {% endset %}

   {{ _self.field(name, field, label, options) }}
{% endmacro %}


{% macro checkboxField(name, value, label = "", options = {}) %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'required': true}|merge(options) %}
   {% endif %}

   {% set field %}
      <input type="hidden"   name="{{ name }}" value="0" />
      <input type="checkbox" name="{{ name }}" value="1" class="form-check-input" id="%id%"
             {{ value == 1 ? 'checked' : '' }}
             {{ options.readonly ? 'readonly' : '' }}
             {{ options.required ? 'required' : '' }}
             {{ options.disabled ? 'disabled' : '' }} />
   {% endset %}

   {{ _self.field(name, field, label, options) }}
{% endmacro %}


{% macro sliderField(name, value, label = '', options = {}) %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'required': true}|merge(options) %}
   {% endif %}

   {% set field %}
      <label class="form-check form-switch pt-2">
         <input type="hidden"   name="{{ name }}" value="0" />
         <input type="checkbox" name="{{ name }}" value="1" class="form-check-input" id="%id%"
                {{ value == 1 ? 'checked' : '' }}
                {{ options.readonly ? 'readonly' : '' }}
                {{ options.required ? 'required' : '' }}
                {{ options.disabled ? 'disabled' : '' }} />
         {% if options.label2 %}
            <span class="form-check-label">{{ options.label2 }}</span>
         {% endif %}
      </label>
   {% endset %}

   {{ _self.field(name, field, label, options) }}
{% endmacro %}


{% macro numberField(name, value, label = '', options = {}) %}
   {% set options = options|merge({'type': 'text'}) %}
   {% set value = formatNumber(value, true) %}
   {{ _self.textField(name, value, label, options) }}
{% endmacro %}


{% macro readOnlyField(name, value, label = '', options = {}) %}
   {% set options = options|merge({'readonly': true}) %}
   {% if value|length == 0 %}
      {% set value = '&nbsp;' %}
   {% endif %}

   {% set value %}
      <span class="form-control" readonly>{{ value|raw }}</span>
   {% endset %}
   {{ _self.field(name, value, label, options) }}
{% endmacro %}


{% macro textareaField(name, value, label = '', options = {}) %}
   {% set options = {'rand': random()}|merge(options) %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'required': true}|merge(options) %}
   {% endif %}
   {% set id = options.id|length > 0 ? options.id : (name ~ "_" ~ options.rand) %}

   {% set field %}
      <textarea class="form-control" id="{{ id }}" name="{{ name }}" rows="3"
                {{ options.disabled ? 'disabled' : '' }}
                {{ options.required ? 'required' : '' }}>{{ value|raw }}</textarea>
   {% endset %}

   {% if options.enable_richtext %}
      {{ Html__initEditorSystem(
         id,
         options.rand,
         false
      ) }}
   {% endif %}
   {% if options.enable_fileupload %}
      {% set add_html %}
         {{ Html__file({}) }}
      {% endset %}

      {% set options = options|merge({'add_field_html': add_html}) %}
   {% endif %}

   {{ _self.field(name, field, label, options) }}
   {% if options.enable_mentions and config('use_notifications') %}
      <script>
         $(
            function() {
               const user_mention = new GLPI.RichText.UserMention(
                  tinymce.get('{{ id }}'),
                  {{ session('glpiactive_entity') }},
                  '{{ getNewIDORToken('User', {
                     'right': 'all',
                     'entity_restrict': session('glpiactive_entity')
                  }) }}'
               );
               user_mention.register();
            }
         )
      </script>
   {% endif %}
{% endmacro %}


{% macro dateField(name, value, label = '', options = {}) %}
   {% set options = {'rand': random()}|merge(options) %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'required': true}|merge(options) %}
   {% endif %}

   {% set field %}
      <div class="input-icon flex-grow-1">
         <input type="date" class="form-control" id="%id%"
                name="{{ name }}" value="{{ value }}"
                {{ options.required ? 'required' : '' }}
                {{ options.disabled ? 'disabled' : '' }} />
         <i class="input-icon-addon far fa-calendar"></i>
      </div>
      <script>
      $(function() {
         $("#{{ id }}").flatpickr({
            altInput: true,
            altFormat: '{{ getDateFormat('js') }}',
            dateFormat: 'Y-m-d',
            enableTime: true,
            weekNumbers: true,
            allowInput: true,
            /* TODO locale */
            onClose(dates, currentdatestring, picker) {
               picker.setDate(picker.altInput.value, true, picker.config.altFormat)
            }
         });
      });
      </script>
   {% endset %}

   {{ _self.field(name, field, label, options) }}
{% endmacro %}

{% macro datetimeField(name, value, label = '', options = {}) %}
   {% set options = {'rand': random()}|merge(options) %}
   {% set id = options.id|length > 0 ? options.id : (name ~ '_' ~ options.rand) %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'required': true}|merge(options) %}
   {% endif %}

   {% set field %}
      <div class="input-icon flex-grow-1">
         <input type="text" class="form-control" id="{{ id }}"
                name="{{ name }}" value="{{ value }}"
                {{ options.required ? 'required' : "" }}
                {{ options.disabled ? 'disabled' : "" }}>
         <i class="input-icon-addon far fa-calendar"></i>
      </div>
      <script>
      $(function() {
         $('#{{ id }}').flatpickr({
            //wrap: true,
            altInput: true,
            dateFormat: 'Y-m-d H:i:S',
            altFormat: '{{ getDateFormat("js") }} H:i:S',
            enableTime: true,
            enableSeconds: true,
            weekNumbers: true,
            allowInput: true,
            /* TODO locale */
            onClose(dates, currentdatestring, picker) {
               picker.setDate(picker.altInput.value, true, picker.config.altFormat)
            }
         });
      });
      </script>
   {% endset %}

   {{ _self.field(name, field, label, options) }}
{% endmacro %}


{% macro dropdownNumberField(name, value, label = '', options = {}) %}
   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% set field %}
      {{ Dropdown__showNumber(name, {
         'value': value,
         'display': false,
         'rand': rand,
         'width': '100%',
         'class': 'form-select',
      }|merge(options)) }}
   {% endset %}

   {{ _self.field(name, field, label, options|merge({'id': 'dropdown_' ~ name ~ '_' ~ options.rand})) }}
{% endmacro %}

{% macro dropdownArrayField(name, value, elements, label = '', options = {}) %}
   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}

   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'required': true}|merge(options) %}
   {% endif %}

   {% set field %}
      {{ Dropdown__showFromArray(name, elements, {
         'value': value,
         'display': false,
         'rand': rand,
         'width': '100%',
         'class': 'form-select',
      }|merge(options)) }}
   {% endset %}

   {{ _self.field(name, field, label, options|merge({'id': 'dropdown_' ~ name ~ '_' ~ options.rand})) }}
{% endmacro %}

{% macro dropdownTimestampField(name, value, label = '', options) %}
   {% set options = {'rand': random()}|merge(options) %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'required': true}|merge(options) %}
   {% endif %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}

   {% set field %}
      {{ Dropdown__showTimestamp(name, {
         'value': value,
         'display': false,
         'rand': rand,
         'width': '100%',
         'class': 'form-select',
      }|merge(options)) }}
   {% endset %}

   {{ _self.field(name, field, label, options|merge({'id': 'dropdown_' ~ name ~ '_' ~ options.rand})) }}
{% endmacro %}

{% macro dropdownField(itemtype, name, value, label = '', options = {}) %}
   {% set options = {'rand': random()}|merge(options) %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% if options.disabled %}
      {% set options = options|merge({'specific_tags': {'disabled': 'disabled'}}) %}
   {% endif %}

   {% set field %}
      {{ itemtype|dropdown({
         'name': name,
         'value': value,
         'rand': rand,
         'width': '100%',
         'class': 'form-select',
      }|merge(options)) }}
   {% endset %}

   {{ _self.field(name, field, label, options|merge({'id': 'dropdown_' ~ name ~ '_' ~ options.rand})) }}
{% endmacro %}

{% macro htmlField(name, value, label = '', options = {}) %}
   {% if value|length == 0 %}
      {% set value = '&nbsp;' %}
   {% endif %}

   {% set value %}
      <span class="form-control-plaintext">{{ value|raw }}</span>
   {% endset %}
   {{ _self.field(name, value, label, options) }}
{% endmacro %}

{% macro field(name, field, label = '', options = {}) %}
   {% set options = {
      'rand': random(),
      'is_horizontal': true,
      'include_field': true,
      'add_field_html': '',
   }|merge(options) %}

   {% if not options.include_field %}
      {{ field }}
   {% else %}
      {% set id    = options.id|length > 0 ? options.id : (name ~ '_' ~ options.rand) %}
      {% set field = field|replace({'%id%': id}) %}
      {% set add_field_html = options.add_field_html|length > 0 ? options.add_field_html : "" %}

      {% if options.fields_template is not defined or not options.fields_template.isHiddenField(name) %}
         {% if options.no_label %}
            {{ _self.noLabelField(field, id, add_field_html, options) }}
         {% elseif options.is_horizontal %}
            {{ _self.horizontalField(label, field, id, add_field_html, options|merge({'name': name})) }}
         {% else %}
            {{ _self.verticalField(label, field, id, add_field_html, options|merge({'name': name})) }}
         {% endif %}
      {% endif %}
   {% endif %}
{% endmacro %}


{% macro nullField(options = {}) %}
   {% set options = {'is_horizontal': true}|merge(options) %}

   {% if options.is_horizontal %}
      {{ _self.horizontalField(label, field, id, add_field_html) }}
   {% else %}
      {{ _self.verticalField(label, field, id, add_field_html) }}
   {% endif %}
{% endmacro %}


{% macro noLabelField(field, id = '', add_field_html = '', options = {}) %}
   {% set options = {'full_width': false}|merge(options) %}

   {% set class = "col-12 col-sm-6" %}
   {% if options.full_width %}
      {% set class = "col-12" %}
   {% endif %}

   <div class="{{ class }} mb-3">
      {{ field|raw }}
      {{ add_field_html|raw }}
   </div>
{% endmacro %}


{% macro horizontalField(label, field, id, add_field_html = '', options = {}) %}
   {% set options = {
      'full_width': false,
      'full_width_adapt_column': true,
      'align_label_right': true,
      'mb': 'mb-2',
      'field_class': 'col-12 col-sm-6',
      'label_class': 'col-xxl-5',
      'input_class': 'col-xxl-7',
   }|merge(options) %}

   {% if options.full_width %}
      {% set options = options|merge({
         field_class: 'col-12',
      }) %}

      {% if options.full_width_adapt_column %}
         {% set options = options|merge({
            label_class: 'col-xxl-3',
            input_class: 'col-xxl-9',
      }) %}
      {% endif %}
   {% endif %}

   {% if options.icon_label %}
      {% set options = options|merge({
         label_class: 'col-2',
         input_class: 'col-10',
      }) %}
   {% endif %}

   {% if options.align_label_right %}
      {% set options = options|merge({
         label_class: options.label_class ~ ' text-xxl-end',
      }) %}
   {% endif %}

   <div class="form-field row {{ options.field_class }} {{ options.mb }}">
      {{ _self.label(label, id, options, 'col-form-label ' ~ options.label_class) }}
      <div class="{{ options.input_class }}">
         {{ field|raw }}
         {{ add_field_html|raw }}
      </div>
   </div>
{% endmacro %}


{% macro verticalField(label, field, id, add_field_html = '', options = {}) %}
   {% set options = {
      'full_width': false,
      'mb': 'mb-2'
   }|merge(options) %}

   {% set class = "col-12 col-sm-6" %}
   {% if options.full_width %}
      {% set class = 'col-12' %}
   {% endif %}

   <div class="form-field {{ class }} {{ options.mb }}">
      {{ _self.label(label, id, options) }}
      {{ field|raw }}
      {{ add_field_html|raw }}
   </div>
{% endmacro %}


{% macro label(label, id, options = {}, class = 'form-label') %}
   {% set required_mark = "" %}
   {% if options.fields_template.isMandatoryField(options.name) or options.required %}
      {% set required_mark = '<span class="required">*</span>' %}
   {% endif %}

   {% set helper = '' %}
   {% if options.helper %}
      {% set helper %}
         <span class="form-help" data-bs-toggle="popover" data-bs-placement="top" data-bs-html="true"
               data-bs-content="{{ options.helper }}">
            ?
         <span>
      {% endset %}
   {% endif %}

   <label class="{{ class }}" for="{{ id }}">
      {{ label|raw }}
      {{ required_mark|raw }}
      {{ helper|raw }}
   </label>
{% endmacro %}
