
{% import "components/form/fields_macros.html.twig" as fields %}

{% set bg = "" %}
{% if item.isDeleted() %}
   {% set bg = "asset-deleted" %}
{% endif %}

<div class="asset {{ bg }}">
   {% include("components/form/header.html.twig") %}

   {% set rand = random() %}
   {% set params  = params ?? [] %}
   {% set target       = params['target'] ?? item.getFormURL() %}
   {% set withtemplate = params['withtemplate'] ?? "" %}

   {# TODO form-select normal size for select2 #}

   <div class="card-body">
      <div class="d-flex flex-row flex-wrap flex-xl-nowrap">
         <div class="row flex-row align-items-start">
            <div class="row flex-row">
               {% if item.isField('name') %}
                  {{ fields.autoNameField(
                     "name",
                     item,
                     __('Name'),
                     withtemplate
                  ) }}
               {% endif %}

               {% if item.isField('states_id') %}
                  {{ fields.dropdownField(
                     "State",
                     "states_id",
                     item.fields['states_id'],
                     __("Status"),
                     {
                        'entity'  : item.fields['entities_id'],
                        'condition': {'is_visible_computer': 1},
                     }
                  ) }}
               {% endif %}

               {% if item.isField('is_helpdesk_visible') %}
                  {{ fields.checkboxField(
                     "is_helpdesk_visible",
                     item.fields['is_helpdesk_visible'],
                     __('Associable to a ticket'),
                  ) }}
               {% endif %}

               {% set dc_breadcrumbs = getDcBreadcrumb(item) %}
               {% if dc_breadcrumbs|length > 0 %}
                   {% set dc_breadcrumbs %}
                     <ol class="breadcrumb breadcrumb-arrows" aria-label="breadcrumbs">
                     {% for dc_item in dc_breadcrumbs|reverse %}
                        <li class="breadcrumb-item">{{ dc_item|raw }}</li>
                     {% endfor %}
                     </ol>
                  {% endset %}

                  {{ fields.htmlField(
                     "",
                     dc_breadcrumbs,
                     __('Data center position'),
                  ) }}

                  {{ fields.nullField() }} {# set an empty space in front of dc breadcrumb #}
               {% endif %}

               {% if item.isField('locations_id') %}
                  {{ fields.dropdownField(
                     "Location",
                     "locations_id",
                     item.fields['locations_id'],
                     "Location"|itemtype_name,
                     {
                        'entity'  : item.fields['entities_id'],
                     }
                  ) }}
               {% endif %}

               {% if item.isField('softwarecategories_id') %}
                  {{ fields.dropdownField(
                     "SoftwareCategory",
                     "softwarecategories_id",
                     item.fields['softwarecategories_id'],
                     "SoftwareCategory"|itemtype_name,
                  ) }}
               {% endif %}

               {% set type_itemtype = item.getType ~ "Type" %}
               {% set type_fk = type_itemtype|get_foreignkey_field %}
               {% if item.isField(type_fk) %}
                  {{ fields.dropdownField(
                     type_itemtype,
                     type_fk,
                     item.fields[type_fk],
                     _n('Type', 'Types', 1),
                  ) }}
               {% endif %}

               {% if item.isField('ref') %}
                  {{ fields.textField(
                     "ref",
                     item.fields['ref'],
                     __('Reference'),
                  ) }}
               {% endif %}

               {% if item.isField('users_id_tech') %}
                  {{ fields.dropdownField(
                     "User",
                     "users_id_tech",
                     item.fields['users_id_tech'],
                     __('Technician in charge of the hardware'),
                     {
                        'entity'  : item.fields['entities_id'],
                        'right' : 'own_ticket',
                     }
                  ) }}
               {% endif %}

               {% if item.isField('manufacturers_id') %}
                  {{ fields.dropdownField(
                     "Manufacturer",
                     "manufacturers_id",
                     item.fields['manufacturers_id'],
                     "Manufacturer"|itemtype_name
                  ) }}
               {% endif %}

               {% if item.isField('groups_id_tech') %}
                  {{ fields.dropdownField(
                     "Group",
                     "groups_id_tech",
                     item.fields['groups_id_tech'],
                     __('Group in charge of the hardware'),
                     {
                        'entity'  : item.fields['entities_id'],
                        'condition': {'is_assign': 1},
                     }
                  ) }}
               {% endif %}

               {# TODO check dropdown value not selected #}
               {% set model_itemtype = item.getType ~ "Model" %}
               {% set model_fk = model_itemtype|get_foreignkey_field %}
               {% if item.isField(model_fk) %}
                  {{ fields.dropdownField(
                     model_itemtype,
                     model_fk,
                     item.fields[model_fk],
                     _n('Model', 'Models', 1),
                  ) }}
               {% endif %}

               {% if item.isField('contact_num') %}
                  {{ fields.textField(
                     "contact_num",
                     item.fields['contact_num'],
                     __("Alternate username number"),
                  ) }}
               {% endif %}

               {% if item.isField('serial') %}
                  {{ fields.textField(
                     "serial",
                     item.fields['serial'],
                     __("Serial number"),
                  ) }}
               {% endif %}

               {% if item.isField('contact') %}
                  {{ fields.textField(
                     "contact",
                     item.fields['contact'],
                     __("Alternate username"),
                  ) }}
               {% endif %}

               {% if item.isField('otherserial') %}
                  {{ fields.autoNameField(
                     "otherserial",
                     item,
                     __('Inventory number'),
                     withtemplate
                  ) }}
               {% endif %}

               {% if item.isField('users_id') %}
                  {{ fields.dropdownField(
                     "User",
                     "users_id",
                     item.fields['users_id'],
                     "User"|itemtype_name,
                     {
                        'entity'  : item.fields['entities_id'],
                        'right' : 'all',
                     }
                  ) }}
               {% endif %}

               {% if item.isField('is_global') %}
                  {% set dd_globalswitch %}
                     {{ Dropdown__showGlobalSwitch(item.fields['id'], {
                        'withtemplate'       : withtemplate,
                        'value'              : item.fields['is_global'],
                        'management_restrict': config('monitors_management_restrict'),
                        'target'             : target,
                        'width'              : '100%',
                        'class'              : 'form-select',
                     }) }}
                  {% endset %}
                  {{ fields.htmlField(
                     "is_global",
                     dd_globalswitch,
                     __('Management type'),
                  ) }}
               {% endif %}

               {% if item.isField('contact') %}
                  {{ fields.numberField(
                     "size",
                     item.fields['size'],
                     __("Size"),
                  ) }}
               {% endif %}

               {% if item.isField('networks_id') %}
                  {{ fields.dropdownField(
                     "Network",
                     "networks_id",
                     item.fields['networks_id'],
                     _n('Network', 'Networks', 1)
                  ) }}
               {% endif %}

               {% if item.isField('groups_id') %}
                  {{ fields.dropdownField(
                     "Group",
                     "groups_id",
                     item.fields['groups_id'],
                     "Group"|itemtype_name,
                     {
                        'entity'   : item.fields['entities_id'],
                        'condition': {'is_itemgroup': 1},
                     }
                  ) }}
               {% endif %}

               {% if item.isField('uuid') %}
                  {{ fields.textField(
                     "uuid",
                     item.fields['uuid'],
                     __("UUID"),
                  ) }}
               {% endif %}

               {% if item.isField('comment') %}
                  {{ fields.textareaField(
                     "comment",
                     item.fields['comment'],
                     __("Comments"),
                  ) }}
               {% endif %}

               {% if item.isField('ram') %}
                  {{ fields.numberField(
                     "ram",
                     item.fields['ram'],
                     __('%1$s (%2$s)')|format(_n('Memory', 'Memories', 1), __('Mio')),
                  ) }}
               {% endif %}

               {% if item.isField('memory_size') %}
                  {{ fields.numberField(
                     "memory_size",
                     item.fields['memory_size'],
                     _n('Memory', 'Memories', 1),
                  ) }}
               {% endif %}

               {% if item.isField('init_pages_counter') %}
                  {{ fields.numberField(
                     "init_pages_counter",
                     item.fields['init_pages_counter'],
                     __("Initial page counter"),
                  ) }}
               {% endif %}

               {% if item.isField('last_pages_counter') %}
                  {{ fields.numberField(
                     "last_pages_counter",
                     item.fields['last_pages_counter'],
                     __("Current counter of pages"),
                  ) }}
               {% endif %}

               {% if item.isField('is_update') %}
                  {% set dd_software %}
                     {{ "Software"|dropdown({
                        'value': item.fields['softwares_id'],
                        'rand' : rand,
                        'class': 'form-select',
                     }) }}
                  {% endset %}

                  {{ fields.checkboxField(
                     "is_update",
                     item.fields['is_update'],
                     __('Upgrade'),
                     {add_field_html: dd_software}
                  ) }}
               {% endif %}

               {% if item.isField('alarm_threshold') %}
                  {% set dd_alarm_treshold %}
                     {{ Dropdown__showNumber('alarm_threshold', {
                        'value'  : item.fields['alarm_threshold'],
                        'display': false,
                        'rand'   : rand,
                        'width'  : '100%',
                        'class'  : 'form-select',
                        'min'    : 0,
                        'max'    : 100,
                        'step'   : 1,
                        'toadd'  : {'-1': __('Never')}
                     }) }}
                  {% endset %}
                  {% set last_alert_html %}
                     <span class="text-muted">
                        {{ displayLastAlert(item.getType(), item.fields['id']) }}
                     </span>
                  {% endset %}
                  {{ fields.htmlField(
                     "alarm_threshold",
                     dd_alarm_treshold,
                     __('Alert threshold'),
                     {add_field_html: last_alert_html}
                  ) }}
               {% endif %}

               {% if item.isField('brand') %}
                  {{ fields.textField(
                     "brand",
                     item.fields['brand'],
                     __("Brand"),
                  ) }}
               {% endif %}

               {% if item.isField('number_line') %}
                  {{ fields.numberField(
                     "number_line",
                     item.fields['number_line'],
                     _x('quantity', 'Number of lines'),
                  ) }}
               {% endif %}

               {% if item.isField('phonepowersupplies_id') %}
                  {{ fields.dropdownField(
                     "PhonePowerSupply",
                     "phonepowersupplies_id",
                     item.fields['phonepowersupplies_id'],
                     "PhonePowerSupply"|itemtype_name,
                  ) }}
               {% endif %}

               {% if item.isField('autoupdatesystems_id') %}
                  {{ fields.dropdownField(
                     "AutoUpdateSystem",
                     "autoupdatesystems_id",
                     item.fields['autoupdatesystems_id'],
                     "AutoUpdateSystem"|itemtype_name,
                  ) }}
               {% endif %}

               {% set flags_html %}
                  {% include("components/form/flags.html.twig") %}
               {% endset %}

               {% if (flags_html|trim)|length %}
                  {% set flags_html = "<div class='d-flex flex-wrap'>" ~ flags_html ~ "</div>" %}
                  {{ fields.htmlField(
                     "",
                     flags_html,
                     _n('Port', 'Ports', getPluralNumber()),
                  ) }}
               {% endif %}

               {% if item.fields['id'] > 0 and item.isField('is_dynamic') %}
                  <div class="mb-3 col-12 col-sm-6">
                     {{ AutoInventoryInformation() }}
                  </div>
               {% endif %}
            </div> {# .row #}
         </div> {# .row #}
         {% include("components/form/pictures.html.twig") %}
      </div> {# .flex-row #}
   </div> {# .card-body #}

   {% include("components/form/buttons.html.twig") %}
   {% include("components/form/inventory_info.html.twig") %}


   {% if params['formfooter'] == null %}
      <div class="card-footer mx-n2 mb-n2 mt-4">
         {% include("components/form/dates.html.twig") %}
      </div>
   {% endif %}
</div>
